# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches:
  include:
    - master
 paths:
   include:
     - '*'
   exclude:
     - '**/*.yml'
     - '/*.yml'
     - '/README.md'
     - '/*.sh'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool: 
      vmImage: windows-latest
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '--output $(Build.BinariesDirectory)/publish_output/App_Data/jobs/triggered/GraphExcelEmailerWebJob'
        zipAfterPublish: false
        modifyOutputPath: false
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/publish_output'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: Deploy
  jobs:
  - job: DeployJob
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureServiceConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
         'webappname=$(az webapp list --resource-group $(ResGrpName) --query [].name -o tsv)'
         'while [ -z "$webappname" ]; do sleep 30; !!; done'
         'echo $webappname'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'AzureServiceConnection'
        appType: 'webApp'
        WebAppName: '$(WebAppName)'
        packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'
        enableCustomDeployment: true
        DeploymentType: 'zipDeploy'
        TakeAppOfflineFlag: false
    
